@page "/AddCustomer"
@using System.Net.Http.Json
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Net
@using System.Text.Json
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h5>Add New Customer</h5>
@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
        @if (errorMessages.Any())
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in errorMessages)
                {
                    @foreach (var propertyError in error.Value)
                    {
                        <p>@(error.Key + ": " + propertyError)</p>
                    }
                }
            </div>
        }
    </div>
}

<div class="container">
    <form method="post" @onsubmit="Submit" formname="AddCustomer">
        <AntiforgeryToken />
        <div class="form-group row p-2">
            <label for="CustomerId" class="col-sm-3 col-form-label">Customer ID<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.CustomerID" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="CustomerName" class="col-sm-3 col-form-label">Customer Name<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.CustomerName" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="CustomerAddress1" class="col-sm-3 col-form-label">Customer Address 1<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.CustomerAddress1" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="CustomerAddress2" class="col-sm-3 col-form-label">Customer Address 2</label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.CustomerAddress2" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="PhoneNo" class="col-sm-3 col-form-label">Phone No<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.PhoneNo" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="Email" class="col-sm-3 col-form-label">Email<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <InputText @bind-Value="customer.Email" class="form-control" />
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="Language" class="col-sm-3 col-form-label">Language<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-9">
                <select @bind="customer.Language" class="custom-select custom-select-sm tagging form-control" name="Language" id="language" multiple>
                    <option value="">Please Choose</option>
                    @foreach (var item in customer.listLanguage)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="Height" class="col-sm-3 col-form-label">Height<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-6 d-flex align-items-center">
                <InputNumber @bind-Value="customer.Height" min="0" class="form-control" />
                <span class="ml-2"> CM</span>
            </div>
        </div>
        <div class="form-group row p-2">
            <label for="Height" class="col-sm-3 col-form-label">Height<span class="ml-1 text-danger">*</span></label>
            <div class="col-sm-6 d-flex align-items-center">
                <InputNumber @bind-Value="customer.Weight" min="0" class="form-control" />
                <span class="ml-2"> KG</span>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-9 offset-sm-3 right-align">
                <button type="submit" class="btn btn-outline-primary" style="margin-right:4px">Submit</button>
                <a href="javascript:void(0)" onclick="window.history.back();" class="btn btn-outline-danger">Back</a>
            </div>
        </div>
    </form>
</div>


@code {
    public CustomerVM customer { get; set; } = new CustomerVM();
    private string errorMessage;
    Dictionary<string, List<string>> errorMessages = new Dictionary<string, List<string>>();

    protected override void OnInitialized()
    {
        customer = new CustomerVM();
    }

    private async Task Submit()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("Customer/AddNewCustomer", customer);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/CustomerList");
            }
            else
            {
                if (response.StatusCode == HttpStatusCode.BadRequest)
                {
                    var errorResponse = await response.Content.ReadAsStringAsync();
                    var errorObject = JsonSerializer.Deserialize<ErrorResponse>(errorResponse);
                    errorMessage = "Failed to add customer. Please fix the following errors:";
                    errorMessages = errorObject.Errors.ToDictionary(e => e.Key, e => e.Value.Values);
                }
                else
                {
                    errorMessage = "Failed to add customer.";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred error message: " + ex.Message.ToString();
        }
    }

    public class CustomerVM
    {
        public string CustomerID { get; set; }
        public string CustomerName { get; set; }
        public string CustomerAddress1 { get; set; }
        public string CustomerAddress2 { get; set; }
        public string PhoneNo { get; set; }
        public string Email { get; set; }
        public string[] Language { get; set; }
        public List<SelectListItem> listLanguage { get; set; }
        public double Height { get; set; }
        public double Weight { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedAt { get; set; }

        public CustomerVM()
        {
            listLanguage = new List<SelectListItem>
            {
                new SelectListItem { Text = "BM", Value = "BM" },
                new SelectListItem { Text = "BI", Value = "BI" }
            };
            Language = new string[0];
        }
    }


    public class ErrorResponse
    {
        public Dictionary<string, ErrorDetails> Errors { get; set; }
    }

    public class ErrorDetails
    {
        public List<string> Values { get; set; }
    }
}
