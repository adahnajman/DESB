@page "/AddCustomer"
@using System.Net.Http.Json
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Net
@using System.Text.Json
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<head>
    <link rel="stylesheet" href="/css/plugins/select2/select2.min.css" />
    <script src="/css/jquery-3.6.0.min.js"></script>
    <script src="/css/plugins/select2/select2.min.js"></script>
    <script src="/css/plugins/select2/custom-select2.js"></script>
</head>

<h5>Add New Customer</h5>
@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
        @if (errorMessages.Any())
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in errorMessages)
                {
                    @foreach (var propertyError in error.Value)
                    {
                        <p>@(error.Key + ": " + propertyError)</p>
                    }
                }
            </div>
        }
    </div>
}


<form method="post" @onsubmit="Submit" formname="AddCustomer">
    <AntiforgeryToken />
    <div class="form-group row">
        <label for="CustomerId" class="col-sm-2 col-form-label">
            Customer ID
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="customer.CustomerID" />
        </div>
    </div>
    <div class="form-group row">
        <label for="CustomerName" class="col-sm-2 col-form-label">
            Customer Name
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="customer.CustomerName" />
        </div>
    </div>
    <div class="form-group row">
        <label for="CustomerAddress1" class="col-sm-2 col-form-label">
            Customer Address 1
        </label>
        <div class="col-sm-6">
            <InputText @bind-Value="customer.CustomerAddress1" />
        </div>
    </div>
    <div class="form-group row">
        <label for="CustomerAddress2" class="col-sm-2 col-form-label">
            Customer Address 2
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="customer.CustomerAddress2" />
        </div>
    </div>
    <div class="form-group row">
        <label for="PhoneNo" class="col-sm-2 col-form-label">
            Phone No
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="customer.PhoneNo" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-10">
            <InputText @bind-Value="customer.Email" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Language" class="col-sm-2 col-form-label">
            Language
        </label>
        <div class="col-sm-6">
            <select @bind="customer.Language" class="form-control custom-select custom-select-sm tagging" >
                <option value="">Please Choose</option>
                @foreach (var item in customer.listLanguage)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </div>
    </div><br />
    <div class="form-group row">
        <label for="Height" class="col-sm-2 col-form-label">
            Height
        </label>
        <div class="col-sm-10">
            <InputNumber @bind-Value="customer.Height" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Weight" class="col-sm-2 col-form-label">
            Weight
        </label>
        <div class="col-sm-10">
            <InputNumber @bind-Value="customer.Weight" />
        </div>
    </div>

    <div>
        <button type="submit">Submit</button>
    </div>
</form>

@code {
    public CustomerVM customer { get; set; } = new CustomerVM();
    private string errorMessage;
    Dictionary<string, List<string>> errorMessages = new Dictionary<string, List<string>>();

    private async Task Submit()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("Customer/AddNewCustomer", customer);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/CustomerList");
            }
            else
            {
                if (response.StatusCode == HttpStatusCode.BadRequest)
                {
                    var errorResponse = await response.Content.ReadAsStringAsync();
                    var errorObject = JsonSerializer.Deserialize<ErrorResponse>(errorResponse);
                }
                else
                {
                    // Handle other error status codes
                }
                errorMessage = "Failed to add customer.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred error message: " + ex.Message.ToString();
        }
    }

    public class CustomerVM
    {
        public string CustomerID { get; set; }
        public string CustomerName { get; set; }
        public string CustomerAddress1 { get; set; }
        public string CustomerAddress2 { get; set; }
        public string PhoneNo { get; set; }
        public string Email { get; set; }
        public string Language { get; set; }
        public List<SelectListItem> listLanguage { get; set; }
        public double Height { get; set; }
        public double Weight { get; set; }
        public int CreatedBy { get; set; }
        public DateTime CreatedAt { get; set; }

        public CustomerVM()
        {
            listLanguage = new List<SelectListItem>
        {
            new SelectListItem { Text = "BM", Value = "BM" },
            new SelectListItem { Text = "BI", Value = "BI" }
        };
        }
    }

    public class ErrorResponse
    {
        public Dictionary<string, ErrorDetails> Errors { get; set; }
    }

    public class ErrorDetails
    {
        public List<string> Values { get; set; }
    }
}
