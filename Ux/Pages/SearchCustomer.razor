@page "/SearchCustomer"
@using System.Net.Http.Json
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Find Customer</PageTitle>
<form method="post" onsubmit="Submit" @formname="SearchCustomer">
    <AntiforgeryToken />
    <InputText @bind-Value="search.data" />
    <button type="submit">Search</button>
</form>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@code {
    //[SupplyParameterFromForm]
    public SearchVM search { get; set; } = new SearchVM();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(search.data))
        {
            await Submit();
        }
    }


    [Inject]
    public HttpClient HttpClient { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private bool isSearching = false;
    private string errorMessage = "";

    private async Task Submit()
    {
        try
        {
            isSearching = true;
            errorMessage = "";

            if (!string.IsNullOrEmpty(search.data))
            {
                var response = await HttpClient.GetFromJsonAsync<IEnumerable<CustomerVM>>($"Customer/SearchData?data={Uri.EscapeDataString(search.data)}");
                if (response != null && response.Any())
                {
                    // Handle successful response, navigate to the list page for example
                    NavigationManager.NavigateTo("/CustomerList");
                }
                else
                {
                    // Handle if no data is found
                    errorMessage = "No data found.";
                }
            }
            else
            {
                errorMessage = "Search data is empty.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isSearching = false;
        }
    }

    public class SearchVM
    {
        public string data { get; set; }
    }

    public class CustomerVM
    {
        public int? Id { get; set; }
        public string? CustomerID { get; set; }
        public string? CustomerName { get; set; }
        public string? CustomerAddress1 { get; set; }
        public string? CustomerAddress2 { get; set; }
        public string? PhoneNo { get; set; }
        public string? Email { get; set; }
        public string? Language { get; set; }
        public double? Height { get; set; }
        public double? Weight { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedAt { get; set; }
    }
}